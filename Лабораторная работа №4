Лабораторная работа №4
Реализованные классические алгоритмы сортировки, поиска и другие структуры данных на языке Rust.
Код программы:  
// Реализация сортировки пузырьком
fn bubble_sort(arr: &mut [i32]) {
    let n = arr.len();
    for i in 0..n {
        for j in 0..n - i - 1 {
            if arr[j] > arr[j + 1] {
                arr.swap(j, j + 1);
            }
        }
    }
}

// Реализация быстрой сортировки
fn quick_sort(arr: &mut [i32]) {
    if arr.len() <= 1 {
        return;
    }

    let pivot = arr[arr.len() / 2];
    let mut left = 0;
    let mut right = arr.len() - 1;

    while left <= right {
        while arr[left] < pivot {
            left += 1;
        }
        while arr[right] > pivot {
            right -= 1;
        }
        if left <= right {
            arr.swap(left, right);
            left += 1;
            right -= 1;
        }
    }

    if right > 0 {
        quick_sort(&mut arr[0..right + 1]);
    }
    if left < arr.len() {
        quick_sort(&mut arr[left..]);
    }
}

fn main() {
    let mut arr1 = [64, 34, 25, 12, 22, 11, 90];
    bubble_sort(&mut arr1);
    println!("Отсортированный массив (Сортировка пузырьком): {:?}", arr1);

    let mut arr2 = [64, 34, 25, 12, 22, 11, 90];
    quick_sort(&mut arr2);
    println!("Отсортированный массив (Быстрая сортировка): {:?}", arr2);
}
